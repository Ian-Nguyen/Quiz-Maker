{"version":3,"sources":["components/CopyRight.js","App.js","views/404.js","views/student.js","API/quizService.js","components/QuizSection.js","components/QuizResult.js","views/TakeQuiz.js","components/Teacher/QuestionBox.js","components/Teacher/Result.js","views/teacher.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","CopyRight","classes","Typography","variant","color","align","className","Link","href","Date","getFullYear","minHeight","paper","display","flexDirection","alignItems","justifyContent","height","left","backgroundColor","right","teacher","backgroundImage","backgroundSize","backgroundPosition","padding","cursor","filter","transition","student","button","width","textAlign","textBox","margin","lineHeight","selectSection","NotFoundPage","state","Component","image","backgroundRepeat","palette","grey","blue","avatar","form","submit","textField","borderRadius","QuizSelection","props","FormControl","component","fullWidth","FormLabel","question","RadioGroup","aria-label","options","map","text","index","FormControlLabel","value","control","Radio","label","key","onChange","selected","number","QuizResult","Container","Box","src","alt","correct","size","TakeQuiz","getQuestions","questions","location","setState","quizID","getNextQuestion","e","history","push","score","id","answers","result","array","this","console","log","sort","Math","random","answer","nextIndex","length","setTimeout","maxWidth","header","quizContainer","checkAnswer","withStyles","fontSize","boxSizing","overflow","marginBottom","title","option","QuestionBox","useState","setAnswers","answersChanged","event","includes","target","name","answersTemp","correctChanged","TextField","questionChanged","Result","myTheme","createMuiTheme","MakeQuiz","error","count","UID","addQuestion","bind","submitQuiz","body","axios","post","then","response","data","uid","catch","object","asnwers","Button","more","type","onClick","marginRight","routing","exact","path","Grid","container","item","md","sm","xs","idError","setIdError","setError","handleSubmit","a","preventDefault","Paper","elevation","square","Avatar","noValidate","autoComplete","onSubmit","required","mt","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e78d9de.chunk.js","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default function CopyRight() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"textSecondary\"\r\n      align=\"center\"\r\n      className={classes.root}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Quiz Maker\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n      <br />\r\n      All Rights Reserved!\r\n    </Typography>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"animate.css\";\nimport { Container } from \"@material-ui/core\";\nimport CopyRight from \"./components/CopyRight\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    height: \"100%\",\n  },\n  left: {\n    backgroundColor: \"#7a4491\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n  },\n  right: {\n    backgroundColor: \"black\",\n  },\n  teacher: {\n    height: \"50vh\",\n    backgroundImage: 'url(\"create.jpg\")',\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    flexDirection: \"column\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0\",\n\n    cursor: \"pointer\",\n    filter: \"grayscale(100%)\",\n    \"&:hover\": {\n      backgroundSize: \"120%\",\n      filter: \"grayscale(0%)\",\n      transition: \"transform 2s ease-in\",\n    },\n  },\n\n  student: {\n    backgroundImage: 'url(\"makeQuiz.jpg\")',\n  },\n  button: {\n    padding: theme.spacing(2),\n    backgroundColor: \"rgba(0, 0, 0, 0.37)\",\n    color: \"white\",\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n  textBox: {\n    margin: theme.spacing(2),\n    lineHeight: theme.spacing(0.2),\n  },\n  selectSection: {\n    height: \"100%\",\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item md={3} sm={12} xs={12} className={`${classes.left}`}>\n        <div className={`${classes.paper} animated  fadeInDownBig delay-1s`}>\n          <img src=\"icon.png\" alt=\"Logo\" />\n\n          <Container maxWidth=\"sm\" className={classes.textBox}>\n            <Typography variant=\"h5\">What is Quiz Maker:</Typography>\n            <Typography variant=\"body1\">\n              Quiz Maker allows you to create simple quizes and share them with\n              anyone. No sign in or registration required. Simply select an\n              option to get started.\n            </Typography>\n          </Container>\n          <CopyRight />\n        </div>\n      </Grid>\n      <Grid\n        item\n        md={9}\n        sm={12}\n        xs={12}\n        className={` animated  fadeIn  ${classes.right}`}\n      >\n        <Link href=\"/student\">\n          <Container\n            maxWidth=\"xlg\"\n            className={`${classes.teacher} ${classes.student}`}\n          >\n            <Typography variant=\"h5\" className={classes.button}>\n              Take a Quiz\n            </Typography>\n          </Container>\n        </Link>\n        <Link href=\"/makequiz\">\n          <Container maxWidth=\"xlg\" className={classes.teacher}>\n            <Typography variant=\"h5\" className={classes.button}>\n              Make a Quiz\n            </Typography>\n          </Container>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { Component } from \"react\";\r\nclass NotFoundPage extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div>Not Found!</div>;\r\n  }\r\n}\r\nexport default NotFoundPage;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CopyRight from \"../components/CopyRight\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"animate.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(/makeQuiz.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor: theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n  },\r\n  blue: {\r\n    backgroundColor: \" rgb(100, 100, 255)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(2),\r\n    backgroundColor: \"black\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    backgroundColor: \"black\",\r\n\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    borderRadius: \"4px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function SignInSide(props) {\r\n  const classes = useStyles();\r\n  const [idError, setIdError] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [red, setRed] = useState(false);\r\n\r\n  /*\r\n  Handles form submission for quiz id search form\r\n  */\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    var id = event.target.id.value;\r\n    if (!id) {\r\n      setIdError(true);\r\n      setError(\"You must enter a valid quiz id\");\r\n      return false;\r\n    } else {\r\n      setIdError(false);\r\n      setError(\"\");\r\n      const body = {\r\n        id: id,\r\n      };\r\n      //Get the questions from our API. Api gets the questions from the database and returns them\r\n\r\n      await axios\r\n        .post(\"api/getquiz\", body)\r\n\r\n        .then((response) => {\r\n          //Go to the takequiz page and send the questions\r\n          props.history.push(\"/takequiz\", {\r\n            questions: response.data.questions,\r\n            quizID: response.data.UID,\r\n          });\r\n        })\r\n        //Show error if quiz not found\r\n        .catch(function (error) {\r\n          if (\r\n            error.response &&\r\n            error.response.data &&\r\n            error.response.data.error\r\n          )\r\n            setError(error.response.data.error);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={6}\r\n        md={9}\r\n        className={`${classes.image} animated  fadeIn`}\r\n      />\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={6}\r\n        md={3}\r\n        component={Paper}\r\n        elevation={6}\r\n        className={`${classes.blue}`}\r\n        square\r\n      >\r\n        <div className={`${classes.paper} animated  fadeInDownBig delay-1s`}>\r\n          <Avatar className={classes.avatar}>\r\n            <SearchIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Find Quiz\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <TextField\r\n              className={classes.textField}\r\n              error={idError}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"id\"\r\n              label=\"Quiz ID\"\r\n              variant=\"filled\"\r\n              name=\"id\"\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Typography variant=\"body1\" color=\"secondary\">\r\n              {error}\r\n            </Typography>\r\n            <Box mt={5}>\r\n              <CopyRight />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","const questions = [\r\n  {\r\n    question: \"What is 2 + 2?\",\r\n    answers: [\"3\", \"4\", \"5\", \"10\"],\r\n    correct: \"4\",\r\n    id: \"2222\"\r\n  },\r\n\r\n  {\r\n    question: \"What is 10/2?\",\r\n    answers: [\"30\", \"40\", \"5\", \"4\"],\r\n    correct: \"5\",\r\n    id: \"4444\"\r\n  },\r\n  {\r\n    question: \"What is 2 + 1?\",\r\n    answers: [\"3\", \"4\", \"5\", \"10\"],\r\n    correct: \"3\",\r\n    id: \"3333\"\r\n  },\r\n  {\r\n    question: \"What is 520 x 432?\",\r\n    answers: [\"224,640\", \"214,213\", \"312,640\", \"224,650\"],\r\n    correct: \"224,640\",\r\n    id: \"5555\"\r\n  }\r\n];\r\n\r\nexport default questions;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default function QuizSelection(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl component=\"fieldset\" fullWidth>\r\n      <FormLabel component=\"legend\">{props.question}</FormLabel>\r\n      <RadioGroup aria-label=\"question\">\r\n        {props.options.map((text, index) => (\r\n          <FormControlLabel\r\n            value={text}\r\n            control={<Radio />}\r\n            label={text}\r\n            key={index}\r\n            onChange={() => {\r\n              props.selected(text);\r\n            }}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Box } from \"@material-ui/core\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  number: {\r\n    color: \"#fc9003\"\r\n  }\r\n}));\r\n\r\nexport default function QuizResult(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Box>\r\n        <img src=\"/tick.png\" alt=\"checkmark\" />\r\n      </Box>\r\n      <Typography variant=\"h5\">Quiz Completed.</Typography>\r\n      <Typography variant=\"h4\">\r\n        You got <span className={classes.number}>{props.correct}</span> out of{\" \"}\r\n        <span className={classes.number}>{props.size}</span>\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport quizService from \"../API/quizService\";\r\nimport QuizSelection from \"../components/QuizSection\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\nimport QuizResult from \"../components/QuizResult\";\r\nimport CopyRight from \"../components/CopyRight\";\r\n\r\n//Define Styles. Written in JSS. Uses Material-UI's withSytles function to create JSS styles.\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: \"rgb(100, 100, 255)\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  quizContainer: {\r\n    backgroundColor: \"White\",\r\n    padding: \"2rem\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#2e2e2e\",\r\n    padding: \"2rem\",\r\n    color: \"white\",\r\n  },\r\n  id: {\r\n    color: \"#ff6b30\",\r\n    fontSize: \"2rem\",\r\n  },\r\n});\r\nfunction shuffle(array) {\r\n  array.sort(() => Math.random() - 0.5);\r\n  return array;\r\n}\r\nclass TakeQuiz extends Component {\r\n  //Constructor. Initiate Props using Component consturctor (super)\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //States store variables that can be modified while the page is showing. When states are modified,\r\n    //Dom is re-rendered and the modifed tags reload to display new data.\r\n\r\n    //For this reason we store each question as state\r\n    this.state = {\r\n      quizID: \"\",\r\n      index: 0,\r\n      score: 0,\r\n      id: 0,\r\n      question: \"\",\r\n      answers: [],\r\n      correct: \"\",\r\n      result: false,\r\n    };\r\n  }\r\n\r\n  //Get question from API or the backend code.\r\n  getQuestions = () => {\r\n    //set class variable questions to the results returned from api. (this.questions)\r\n    try {\r\n      this.questions = this.props.location.state.questions;\r\n      this.setState({ quizID: this.props.location.state.quizID });\r\n      this.getNextQuestion();\r\n    } catch (e) {\r\n      this.props.history.push(\"/student\");\r\n    }\r\n  };\r\n\r\n  //Uses the index to get the next question and updates state. When state is updated, react will show the new question and answers\r\n  getNextQuestion() {\r\n    const index = this.state.index;\r\n    console.log(index);\r\n    this.setState({\r\n      question: this.questions[index].question,\r\n      answers: shuffle(this.questions[index].answers),\r\n      correct: this.questions[index].correct,\r\n      id: this.questions[index].id,\r\n    });\r\n  }\r\n\r\n  //ComponentDidMount is called by react once page is ready. Here we call getQuestions once page is done loading.\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  //Checks selected answer agaist correct answer if it is correct the state key score is incremented by one.\r\n  checkAnswer(answer, correct) {\r\n    if (answer === correct) {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n      });\r\n    } else {\r\n    }\r\n    var nextIndex = this.state.index + 1;\r\n    if (nextIndex < this.questions.length) {\r\n      this.setState({\r\n        index: nextIndex,\r\n      });\r\n\r\n      //Add a timeout so user has some time to see what answer they have selected before new question loads\r\n      setTimeout(() => this.getNextQuestion(), 500);\r\n    } else {\r\n      //If we are past the last question, show the result\r\n      this.setState({\r\n        result: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  //Render method contains all data we want to display on page.\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Box className={classes.root}>\r\n        <Container maxWidth=\"md\" className={classes.header}>\r\n          Quiz ID: <span className={classes.id}>{this.state.quizID}</span>\r\n        </Container>\r\n        <Container maxWidth=\"md\" className={classes.quizContainer}>\r\n          {/* if we have the result show quizResult component, Otherwise show QuizSelection component */}\r\n          {this.state.result ? (\r\n            <QuizResult\r\n              correct={this.state.score}\r\n              size={this.questions.length}\r\n            />\r\n          ) : (\r\n            <QuizSelection\r\n              question={this.state.question}\r\n              options={this.state.answers}\r\n              key={this.state.id}\r\n              id={this.state.id}\r\n              selected={(answer) => {\r\n                this.checkAnswer(answer, this.state.correct);\r\n              }}\r\n            />\r\n          )}\r\n        </Container>\r\n        {/* Display the copyright component */}\r\n        <CopyRight />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TakeQuiz);\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: \"20px\",\r\n    overflow: \"hidden\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    backgroundColor: \"#ffdcdc\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  options: {\r\n    padding: theme.spacing(2),\r\n\r\n    margin: \"0\",\r\n  },\r\n  option: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function QuestionBox(props) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState();\r\n  const [answers, setAnswers] = useState([\"\", \"\", \"\", \"\"]);\r\n\r\n  const [id, setId] = useState(props.index);\r\n  const questionChanged = (event) => {\r\n    props.questionChanged(id, event.target.value);\r\n  };\r\n  const answersChanged = (event) => {\r\n    if (![\"0\", \"1\", \"2\", \"3\"].includes(event.target.name)) return;\r\n    var answersTemp = answers;\r\n    answersTemp[event.target.name] = event.target.value;\r\n    setAnswers(answersTemp);\r\n    props.answersChanged(id, answers);\r\n    if (event.target.name == 0) {\r\n      props.correctChanged(id, answers[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.title}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Question Title\"\r\n          onChange={questionChanged}\r\n        />\r\n      </Box>\r\n      <Box className={classes.options}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Correct Answer\"\r\n          name=\"0\"\r\n          onChange={answersChanged}\r\n          className={classes.option}\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"1\"\r\n          label=\"Incorrect Answer 1\"\r\n          onChange={answersChanged}\r\n          className={classes.option}\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Incorrect Answer 2\"\r\n          name=\"2\"\r\n          onChange={answersChanged}\r\n          className={classes.option}\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Incorrect Answer 2\"\r\n          name=\"3\"\r\n          onChange={answersChanged}\r\n          className={classes.option}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Box } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n  },\r\n  number: {\r\n    color: \"#fc9003\",\r\n  },\r\n}));\r\n\r\nexport default function Result(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Box>\r\n        <img src=\"/tick.png\" alt=\"checkmark\" />\r\n      </Box>\r\n      <Typography variant=\"h5\">Your Quiz is Ready.</Typography>\r\n      <Typography variant=\"h4\">\r\n        Your quiz ID is: <span className={classes.number}>{props.id}</span>\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport axios from \"axios\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport QuestionBox from \"../components/Teacher/QuestionBox\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport ResultBox from \"../components/Teacher/Result\";\r\nconst myTheme = createMuiTheme();\r\nconst styles = (theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    backgroundColor: \" rgb(100, 100, 255)\",\r\n    padding: myTheme.spacing(2),\r\n  },\r\n  more: {\r\n    backgroundColor: \"green\",\r\n    marginRight: myTheme.spacing(2),\r\n  },\r\n});\r\n\r\nclass MakeQuiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: \"\",\r\n      count: 0,\r\n      questions: [],\r\n      UID: \"\",\r\n      result: false,\r\n    };\r\n    this.addQuestion = this.addQuestion.bind(this);\r\n    this.questionChanged = this.questionChanged.bind(this);\r\n    this.answersChanged = this.answersChanged.bind(this);\r\n    this.correctChanged = this.correctChanged.bind(this);\r\n    this.submitQuiz = this.submitQuiz.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.addQuestion();\r\n  }\r\n\r\n  addQuestion() {\r\n    var questions = this.state.questions;\r\n    questions.push({\r\n      question: \"\",\r\n      answers: [\"\", \"\", \"\", \"\"],\r\n      correct: \"\",\r\n    });\r\n    this.setState({\r\n      questions: questions,\r\n    });\r\n  }\r\n\r\n  async submitQuiz() {\r\n    var body = {\r\n      questions: this.state.questions,\r\n    };\r\n    await axios\r\n      .post(\"api/postquiz\", body)\r\n\r\n      .then((response) => {\r\n        //Go to the takequiz page and send the questions\r\n        this.setState({\r\n          UID: response.data.uid,\r\n          result: true,\r\n        });\r\n      })\r\n      //Show error if quiz not found\r\n      .catch((error) => {\r\n        if (error.response && error.response.data && error.response.data.error)\r\n          this.setState({\r\n            error: error.response.data.error,\r\n          });\r\n      });\r\n  }\r\n\r\n  answersChanged(id, answers) {\r\n    var questions = this.state.questions;\r\n    questions[id].answers = answers;\r\n    this.setState({ questions: questions });\r\n  }\r\n  correctChanged(id, correct) {\r\n    var questions = this.state.questions;\r\n    questions[id].correct = correct;\r\n    this.setState({ questions: questions });\r\n  }\r\n  questionChanged(id, question) {\r\n    var questions = this.state.questions;\r\n    questions[id].question = question;\r\n    this.setState({ questions: questions });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Box className={classes.root}>\r\n        {this.state.error && (\r\n          <Typography variant=\"h5\">ERROR: {this.state.error}</Typography>\r\n        )}\r\n\r\n        {this.state.result ? (\r\n          <ResultBox id={this.state.UID} />\r\n        ) : (\r\n          this.state.questions.map((object, index) => (\r\n            <QuestionBox\r\n              key={index}\r\n              question={object.question}\r\n              answers={object.asnwers}\r\n              correct={object.correct}\r\n              index={index}\r\n              answersChanged={this.answersChanged}\r\n              questionChanged={this.questionChanged}\r\n              correctChanged={this.correctChanged}\r\n            />\r\n          ))\r\n        )}\r\n        {!this.state.result ? (\r\n          <>\r\n            <Button\r\n              className={classes.more}\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.addQuestion}\r\n            >\r\n              Add More\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={this.submitQuiz}\r\n            >\r\n              Create Quiz\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MakeQuiz);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport NotFoundPage from \"./views/404\";\r\nimport Student from \"./views/student\";\r\nimport TakeQuiz from \"./views/TakeQuiz\";\r\nimport MakeQuiz from \"./views/teacher\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nconst routing = (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route exact path=\"/student\" component={Student} />\r\n      <Route exact path=\"/takequiz\" component={TakeQuiz} />\r\n      <Route exact path=\"/makequiz\" component={MakeQuiz} />\r\n      <Route exact path=\"/404\" component={NotFoundPage} />\r\n\r\n      <Redirect to=\"404\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\nReactDOM.render(routing, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}